-- Script generated by Redgate Compare v1.19.6.13134
SET check_function_bodies = false;


DO language plpgsql $$BEGIN RAISE NOTICE 'Creating public.widgets...';END$$;
CREATE TABLE public.widgets (
    record_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    description text NOT NULL
);
ALTER TABLE public.widgets ADD CONSTRAINT widgets_pkey PRIMARY KEY (record_id);
ALTER TABLE public.widgets OWNER TO postgres;


DO language plpgsql $$BEGIN RAISE NOTICE 'Creating public.widget_references...';END$$;
CREATE TABLE public.widget_references (
    widget_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    reference text
);
ALTER TABLE public.widget_references ADD CONSTRAINT widget_references_pkey PRIMARY KEY (widget_id);
ALTER TABLE public.widget_references OWNER TO postgres;


DO language plpgsql $$BEGIN RAISE NOTICE 'Creating public.widget_prices...';END$$;
CREATE TABLE public.widget_prices (
    record_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    widget_id integer,
    price real
);
ALTER TABLE public.widget_prices ADD CONSTRAINT widget_prices_pkey PRIMARY KEY (record_id);
ALTER TABLE public.widget_prices OWNER TO postgres;


DO language plpgsql $$BEGIN RAISE NOTICE 'Creating public.current_prices...';END$$;
CREATE VIEW public.current_prices (widget_id, price, description) AS SELECT wp.widget_id,
    wp.price,
    w.description
   FROM (public.widgets w
     JOIN public.widget_prices wp ON ((w.record_id = wp.widget_id)));
ALTER VIEW public.current_prices OWNER TO postgres;


DO language plpgsql $$BEGIN RAISE NOTICE 'Creating public.get_all_widgets()...';END$$;
CREATE FUNCTION public.get_all_widgets()
RETURNS SETOF public.widgets
LANGUAGE sql
AS $_$
	SELECT record_id,
           description 
	FROM widgets
$_$;
ALTER FUNCTION public.get_all_widgets() OWNER TO postgres;

SET check_function_bodies = true;
